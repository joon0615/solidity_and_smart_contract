{
	"id": "2473c1c7ee9c0a3db51a69acf69282c4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.24",
	"solcLongVersion": "0.4.24+commit.e67f0147",
	"input": {
		"language": "Solidity",
		"sources": {
			"project_faucet/mortal.sol": {
				"content": "pragma solidity ^0.4.24;\n\n// provides self destruction function\n\nimport \"./owned.sol\";\n\ncontract Mortal is Owned {\n    function destroy() public onlyOwner payable {\n        selfdestruct(owner);\n    }\n}"
			},
			"project_faucet/owned.sol": {
				"content": "pragma solidity ^0.4.24;\n\n// base contract setting owner and provides modifier\n\ncontract Owned {\n    address owner;\n\n    constructor() public {\n        owner = msg.sender;\n    }\n\n    modifier onlyOwner {\n        require (msg.sender == owner);\n        _;\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"project_faucet/mortal.sol": {
				"Mortal": {
					"abi": [
						{
							"constant": false,
							"inputs": [],
							"name": "destroy",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"project_faucet/mortal.sol\":88:201  contract Mortal is Owned {... */\n  mstore(0x40, 0x80)\n    /* \"project_faucet/owned.sol\":160:170  msg.sender */\n  caller\n    /* \"project_faucet/owned.sol\":152:157  owner */\n  0x0\n  dup1\n    /* \"project_faucet/owned.sol\":152:170  owner = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"project_faucet/mortal.sol\":88:201  contract Mortal is Owned {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"project_faucet/mortal.sol\":88:201  contract Mortal is Owned {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x83197ef0\n      eq\n      tag_2\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"project_faucet/mortal.sol\":119:199  function destroy() public onlyOwner payable {... */\n    tag_2:\n      tag_3\n      jump(tag_4)\n    tag_3:\n      stop\n    tag_4:\n        /* \"project_faucet/owned.sol\":235:240  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"project_faucet/owned.sol\":221:240  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"project_faucet/owned.sol\":221:231  msg.sender */\n      caller\n        /* \"project_faucet/owned.sol\":221:240  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"project_faucet/owned.sol\":212:241  require (msg.sender == owner) */\n      iszero\n      iszero\n      tag_6\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_6:\n        /* \"project_faucet/mortal.sol\":186:191  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"project_faucet/mortal.sol\":173:192  selfdestruct(owner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      selfdestruct\n\n    auxdata: 0xa165627a7a72305820676dd6187dc5cbe473d3c1a28e63a56e67a1c21f77b3e44e74e88cc2b97f9cd00029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061010c806100536000396000f300608060405260043610603f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806383197ef0146044575b600080fd5b604a604c565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151560a657600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff00a165627a7a72305820676dd6187dc5cbe473d3c1a28e63a56e67a1c21f77b3e44e74e88cc2b97f9cd00029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x10C DUP1 PUSH2 0x53 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x3F JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x83197EF0 EQ PUSH1 0x44 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4A PUSH1 0x4C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH1 0xA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 PUSH8 0x6DD6187DC5CBE473 0xd3 0xc1 LOG2 DUP15 PUSH4 0xA56E67A1 0xc2 0x1f PUSH24 0xB3E44E74E88CC2B97F9CD000290000000000000000000000 ",
							"sourceMap": "88:113:0:-;;;160:10:1;152:5;;:18;;;;;;;;;;;;;;;;;;88:113:0;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405260043610603f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806383197ef0146044575b600080fd5b604a604c565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151560a657600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff00a165627a7a72305820676dd6187dc5cbe473d3c1a28e63a56e67a1c21f77b3e44e74e88cc2b97f9cd00029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x3F JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x83197EF0 EQ PUSH1 0x44 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4A PUSH1 0x4C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH1 0xA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 PUSH8 0x6DD6187DC5CBE473 0xd3 0xc1 LOG2 DUP15 PUSH4 0xA56E67A1 0xc2 0x1f PUSH24 0xB3E44E74E88CC2B97F9CD000290000000000000000000000 ",
							"sourceMap": "88:113:0:-;;;;;;;;;;;;;;;;;;;;;;;;119:80;;;;;;;235:5:1;;;;;;;;;;;221:19;;:10;:19;;;212:29;;;;;;;;186:5:0;;;;;;;;;;;173:19;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "53600",
								"executionCost": "20347",
								"totalCost": "73947"
							},
							"external": {
								"destroy()": "30621"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 88,
									"end": 201,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 88,
									"end": 201,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 88,
									"end": 201,
									"name": "MSTORE"
								},
								{
									"begin": 160,
									"end": 170,
									"name": "CALLER"
								},
								{
									"begin": 152,
									"end": 157,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 152,
									"end": 157,
									"name": "DUP1"
								},
								{
									"begin": 152,
									"end": 170,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 152,
									"end": 170,
									"name": "EXP"
								},
								{
									"begin": 152,
									"end": 170,
									"name": "DUP2"
								},
								{
									"begin": 152,
									"end": 170,
									"name": "SLOAD"
								},
								{
									"begin": 152,
									"end": 170,
									"name": "DUP2"
								},
								{
									"begin": 152,
									"end": 170,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 152,
									"end": 170,
									"name": "MUL"
								},
								{
									"begin": 152,
									"end": 170,
									"name": "NOT"
								},
								{
									"begin": 152,
									"end": 170,
									"name": "AND"
								},
								{
									"begin": 152,
									"end": 170,
									"name": "SWAP1"
								},
								{
									"begin": 152,
									"end": 170,
									"name": "DUP4"
								},
								{
									"begin": 152,
									"end": 170,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 152,
									"end": 170,
									"name": "AND"
								},
								{
									"begin": 152,
									"end": 170,
									"name": "MUL"
								},
								{
									"begin": 152,
									"end": 170,
									"name": "OR"
								},
								{
									"begin": 152,
									"end": 170,
									"name": "SWAP1"
								},
								{
									"begin": 152,
									"end": 170,
									"name": "SSTORE"
								},
								{
									"begin": 152,
									"end": 170,
									"name": "POP"
								},
								{
									"begin": 88,
									"end": 201,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 88,
									"end": 201,
									"name": "DUP1"
								},
								{
									"begin": 88,
									"end": 201,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 88,
									"end": 201,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 88,
									"end": 201,
									"name": "CODECOPY"
								},
								{
									"begin": 88,
									"end": 201,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 88,
									"end": 201,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820676dd6187dc5cbe473d3c1a28e63a56e67a1c21f77b3e44e74e88cc2b97f9cd00029",
									".code": [
										{
											"begin": 88,
											"end": 201,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 88,
											"end": 201,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 88,
											"end": 201,
											"name": "MSTORE"
										},
										{
											"begin": 88,
											"end": 201,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 88,
											"end": 201,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 88,
											"end": 201,
											"name": "LT"
										},
										{
											"begin": 88,
											"end": 201,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 88,
											"end": 201,
											"name": "JUMPI"
										},
										{
											"begin": 88,
											"end": 201,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 88,
											"end": 201,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 88,
											"end": 201,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 88,
											"end": 201,
											"name": "SWAP1"
										},
										{
											"begin": 88,
											"end": 201,
											"name": "DIV"
										},
										{
											"begin": 88,
											"end": 201,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 88,
											"end": 201,
											"name": "AND"
										},
										{
											"begin": 88,
											"end": 201,
											"name": "DUP1"
										},
										{
											"begin": 88,
											"end": 201,
											"name": "PUSH",
											"value": "83197EF0"
										},
										{
											"begin": 88,
											"end": 201,
											"name": "EQ"
										},
										{
											"begin": 88,
											"end": 201,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 88,
											"end": 201,
											"name": "JUMPI"
										},
										{
											"begin": 88,
											"end": 201,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 88,
											"end": 201,
											"name": "JUMPDEST"
										},
										{
											"begin": 88,
											"end": 201,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 88,
											"end": 201,
											"name": "DUP1"
										},
										{
											"begin": 88,
											"end": 201,
											"name": "REVERT"
										},
										{
											"begin": 119,
											"end": 199,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 119,
											"end": 199,
											"name": "JUMPDEST"
										},
										{
											"begin": 119,
											"end": 199,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 119,
											"end": 199,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 119,
											"end": 199,
											"name": "JUMP"
										},
										{
											"begin": 119,
											"end": 199,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 119,
											"end": 199,
											"name": "JUMPDEST"
										},
										{
											"begin": 119,
											"end": 199,
											"name": "STOP"
										},
										{
											"begin": 119,
											"end": 199,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 119,
											"end": 199,
											"name": "JUMPDEST"
										},
										{
											"begin": 235,
											"end": 240,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 235,
											"end": 240,
											"name": "DUP1"
										},
										{
											"begin": 235,
											"end": 240,
											"name": "SWAP1"
										},
										{
											"begin": 235,
											"end": 240,
											"name": "SLOAD"
										},
										{
											"begin": 235,
											"end": 240,
											"name": "SWAP1"
										},
										{
											"begin": 235,
											"end": 240,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 235,
											"end": 240,
											"name": "EXP"
										},
										{
											"begin": 235,
											"end": 240,
											"name": "SWAP1"
										},
										{
											"begin": 235,
											"end": 240,
											"name": "DIV"
										},
										{
											"begin": 235,
											"end": 240,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 235,
											"end": 240,
											"name": "AND"
										},
										{
											"begin": 221,
											"end": 240,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 221,
											"end": 240,
											"name": "AND"
										},
										{
											"begin": 221,
											"end": 231,
											"name": "CALLER"
										},
										{
											"begin": 221,
											"end": 240,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 221,
											"end": 240,
											"name": "AND"
										},
										{
											"begin": 221,
											"end": 240,
											"name": "EQ"
										},
										{
											"begin": 212,
											"end": 241,
											"name": "ISZERO"
										},
										{
											"begin": 212,
											"end": 241,
											"name": "ISZERO"
										},
										{
											"begin": 212,
											"end": 241,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 212,
											"end": 241,
											"name": "JUMPI"
										},
										{
											"begin": 212,
											"end": 241,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 212,
											"end": 241,
											"name": "DUP1"
										},
										{
											"begin": 212,
											"end": 241,
											"name": "REVERT"
										},
										{
											"begin": 212,
											"end": 241,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 212,
											"end": 241,
											"name": "JUMPDEST"
										},
										{
											"begin": 186,
											"end": 191,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 186,
											"end": 191,
											"name": "DUP1"
										},
										{
											"begin": 186,
											"end": 191,
											"name": "SWAP1"
										},
										{
											"begin": 186,
											"end": 191,
											"name": "SLOAD"
										},
										{
											"begin": 186,
											"end": 191,
											"name": "SWAP1"
										},
										{
											"begin": 186,
											"end": 191,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 186,
											"end": 191,
											"name": "EXP"
										},
										{
											"begin": 186,
											"end": 191,
											"name": "SWAP1"
										},
										{
											"begin": 186,
											"end": 191,
											"name": "DIV"
										},
										{
											"begin": 186,
											"end": 191,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 186,
											"end": 191,
											"name": "AND"
										},
										{
											"begin": 173,
											"end": 192,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 173,
											"end": 192,
											"name": "AND"
										},
										{
											"begin": 173,
											"end": 192,
											"name": "SELFDESTRUCT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"destroy()": "83197ef0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project_faucet/mortal.sol\":\"Mortal\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project_faucet/mortal.sol\":{\"keccak256\":\"0x7402e47657ae43c068095fbd1cdc9aceb60fba87071c972b54bbaf51dd48d26f\",\"urls\":[\"bzzr://4fd58e9dde5e1c68ac46af44a52e1905b7961bcf2ab6e1ea7f963f3996365a5f\"]},\"project_faucet/owned.sol\":{\"keccak256\":\"0xad84c6c8f8684eac3162628b874385d51cf2c36ff23e3ef72652d27d3e6a978b\",\"urls\":[\"bzzr://d0f299c9a957b7a144a4d3878ef189db7f7b8dc63ca7177c64ae4639f6b2678c\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"project_faucet/owned.sol": {
				"Owned": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"project_faucet/owned.sol\":80:261  contract Owned {... */\n  mstore(0x40, 0x80)\n    /* \"project_faucet/owned.sol\":121:177  constructor() public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"project_faucet/owned.sol\":121:177  constructor() public {... */\n  pop\n    /* \"project_faucet/owned.sol\":160:170  msg.sender */\n  caller\n    /* \"project_faucet/owned.sol\":152:157  owner */\n  0x0\n  dup1\n    /* \"project_faucet/owned.sol\":152:170  owner = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"project_faucet/owned.sol\":80:261  contract Owned {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"project_faucet/owned.sol\":80:261  contract Owned {... */\n      mstore(0x40, 0x80)\n      0x0\n      dup1\n      revert\n\n    auxdata: 0xa165627a7a72305820415f9a16119720d1ead896bce5f13aeb6ab92aec9856dcb3bbc381a2ee993c930029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550603580605d6000396000f3006080604052600080fd00a165627a7a72305820415f9a16119720d1ead896bce5f13aeb6ab92aec9856dcb3bbc381a2ee993c930029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x35 DUP1 PUSH1 0x5D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 COINBASE 0x5f SWAP11 AND GT SWAP8 KECCAK256 0xd1 0xea 0xd8 SWAP7 0xbc 0xe5 CALL GASPRICE 0xeb PUSH11 0xB92AEC9856DCB3BBC381A2 0xee SWAP10 EXTCODECOPY SWAP4 STOP 0x29 ",
							"sourceMap": "80:181:1:-;;;121:56;8:9:-1;5:2;;;30:1;27;20:12;5:2;121:56:1;160:10;152:5;;:18;;;;;;;;;;;;;;;;;;80:181;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600080fd00a165627a7a72305820415f9a16119720d1ead896bce5f13aeb6ab92aec9856dcb3bbc381a2ee993c930029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 COINBASE 0x5f SWAP11 AND GT SWAP8 KECCAK256 0xd1 0xea 0xd8 SWAP7 0xbc 0xe5 CALL GASPRICE 0xeb PUSH11 0xB92AEC9856DCB3BBC381A2 0xee SWAP10 EXTCODECOPY SWAP4 STOP 0x29 ",
							"sourceMap": "80:181:1:-;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "10600",
								"executionCost": "20332",
								"totalCost": "30932"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 80,
									"end": 261,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 80,
									"end": 261,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 80,
									"end": 261,
									"name": "MSTORE"
								},
								{
									"begin": 121,
									"end": 177,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 121,
									"end": 177,
									"name": "POP"
								},
								{
									"begin": 160,
									"end": 170,
									"name": "CALLER"
								},
								{
									"begin": 152,
									"end": 157,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 152,
									"end": 157,
									"name": "DUP1"
								},
								{
									"begin": 152,
									"end": 170,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 152,
									"end": 170,
									"name": "EXP"
								},
								{
									"begin": 152,
									"end": 170,
									"name": "DUP2"
								},
								{
									"begin": 152,
									"end": 170,
									"name": "SLOAD"
								},
								{
									"begin": 152,
									"end": 170,
									"name": "DUP2"
								},
								{
									"begin": 152,
									"end": 170,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 152,
									"end": 170,
									"name": "MUL"
								},
								{
									"begin": 152,
									"end": 170,
									"name": "NOT"
								},
								{
									"begin": 152,
									"end": 170,
									"name": "AND"
								},
								{
									"begin": 152,
									"end": 170,
									"name": "SWAP1"
								},
								{
									"begin": 152,
									"end": 170,
									"name": "DUP4"
								},
								{
									"begin": 152,
									"end": 170,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 152,
									"end": 170,
									"name": "AND"
								},
								{
									"begin": 152,
									"end": 170,
									"name": "MUL"
								},
								{
									"begin": 152,
									"end": 170,
									"name": "OR"
								},
								{
									"begin": 152,
									"end": 170,
									"name": "SWAP1"
								},
								{
									"begin": 152,
									"end": 170,
									"name": "SSTORE"
								},
								{
									"begin": 152,
									"end": 170,
									"name": "POP"
								},
								{
									"begin": 80,
									"end": 261,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 80,
									"end": 261,
									"name": "DUP1"
								},
								{
									"begin": 80,
									"end": 261,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 80,
									"end": 261,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 80,
									"end": 261,
									"name": "CODECOPY"
								},
								{
									"begin": 80,
									"end": 261,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 80,
									"end": 261,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820415f9a16119720d1ead896bce5f13aeb6ab92aec9856dcb3bbc381a2ee993c930029",
									".code": [
										{
											"begin": 80,
											"end": 261,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 80,
											"end": 261,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 80,
											"end": 261,
											"name": "MSTORE"
										},
										{
											"begin": 80,
											"end": 261,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 80,
											"end": 261,
											"name": "DUP1"
										},
										{
											"begin": 80,
											"end": 261,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project_faucet/owned.sol\":\"Owned\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project_faucet/owned.sol\":{\"keccak256\":\"0xad84c6c8f8684eac3162628b874385d51cf2c36ff23e3ef72652d27d3e6a978b\",\"urls\":[\"bzzr://d0f299c9a957b7a144a4d3878ef189db7f7b8dc63ca7177c64ae4639f6b2678c\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"project_faucet/mortal.sol": {
				"ast": {
					"absolutePath": "project_faucet/mortal.sol",
					"exportedSymbols": {
						"Mortal": [
							15
						]
					},
					"id": 16,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"absolutePath": "project_faucet/owned.sol",
							"file": "./owned.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 16,
							"sourceUnit": 41,
							"src": "65:21:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 3,
										"name": "Owned",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 40,
										"src": "107:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Owned_$40",
											"typeString": "contract Owned"
										}
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "107:5:0"
								}
							],
							"contractDependencies": [
								40
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 15,
							"linearizedBaseContracts": [
								15,
								40
							],
							"name": "Mortal",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 13,
										"nodeType": "Block",
										"src": "163:36:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 10,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 19,
															"src": "186:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 9,
														"name": "selfdestruct",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 63,
														"src": "173:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 11,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "173:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 12,
												"nodeType": "ExpressionStatement",
												"src": "173:19:0"
											}
										]
									},
									"documentation": null,
									"id": 14,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 7,
											"modifierName": {
												"argumentTypes": null,
												"id": 6,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 39,
												"src": "145:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "145:9:0"
										}
									],
									"name": "destroy",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "135:2:0"
									},
									"payable": true,
									"returnParameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "163:0:0"
									},
									"scope": 15,
									"src": "119:80:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 16,
							"src": "88:113:0"
						}
					],
					"src": "0:201:0"
				},
				"id": 0
			},
			"project_faucet/owned.sol": {
				"ast": {
					"absolutePath": "project_faucet/owned.sol",
					"exportedSymbols": {
						"Owned": [
							40
						]
					},
					"id": 41,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 17,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:1"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 40,
							"linearizedBaseContracts": [
								40
							],
							"name": "Owned",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 19,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 40,
									"src": "101:13:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 18,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "101:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "142:35:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 22,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "152:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 23,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 55,
															"src": "160:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 24,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "160:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "152:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 26,
												"nodeType": "ExpressionStatement",
												"src": "152:18:1"
											}
										]
									},
									"documentation": null,
									"id": 28,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "132:2:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "142:0:1"
									},
									"scope": 40,
									"src": "121:56:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 38,
										"nodeType": "Block",
										"src": "202:57:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 34,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 31,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 55,
																	"src": "221:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 32,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "221:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 33,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "235:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "221:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 30,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															58,
															59
														],
														"referencedDeclaration": 58,
														"src": "212:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "212:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 36,
												"nodeType": "ExpressionStatement",
												"src": "212:29:1"
											},
											{
												"id": 37,
												"nodeType": "PlaceholderStatement",
												"src": "251:1:1"
											}
										]
									},
									"documentation": null,
									"id": 39,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "202:0:1"
									},
									"src": "183:76:1",
									"visibility": "internal"
								}
							],
							"scope": 41,
							"src": "80:181:1"
						}
					],
					"src": "0:261:1"
				},
				"id": 1
			}
		}
	}
}