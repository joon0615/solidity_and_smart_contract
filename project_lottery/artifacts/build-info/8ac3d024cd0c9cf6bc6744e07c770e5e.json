{
	"id": "8ac3d024cd0c9cf6bc6744e07c770e5e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.24",
	"solcLongVersion": "0.4.24+commit.e67f0147",
	"input": {
		"language": "Solidity",
		"sources": {
			"project_lottery/simplelottery.sol": {
				"content": "pragma solidity >=0.4.0 <0.7.0;\n\ncontract SimpleLottery {\n    // this contract should be run in testnet, not local Javascript VM\n\n    uint ticketingPeriodCloses;\n    address[] public tickets;\n    address public winner;\n\n    constructor(uint duration) public {\n        // Submitting Ticket starts from 'now', indicating the current block timestamp\n        ticketingPeriodCloses = now + duration * 1 days;\n    }\n\n    function buy() public payable {\n        require(msg.value >= 0.001 ether);\n        require(now < ticketingPeriodCloses);\n        tickets.push(msg.sender);\n    }\n\n    function () external payable {\n        buy();\n    }\n\n    function drawWinner() public {\n        // requires ticketing window to be closed for at least 5 mins. participants cannot know the block number for the winner. \n        require(now > ticketingPeriodCloses + 5 minutes);\n        // winner is empty\n        require(winner == address(0));\n\n        // eth does not provide library for random number since the result of evm should be same even nodes are diff\n        // use blockhash as an alternative\n        // -1 since we cannot know the current block's hash\n        bytes32 hash = blockhash(block.number - 1);\n        bytes32 rand = keccak256(abi.encode(hash));\n\n        winner = tickets[uint(rand) % tickets.length];\n    }\n\n    function withdraw() public {\n        require(msg.sender == winner);\n        msg.sender.transfer(address(this).balance);\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"project_lottery/simplelottery.sol": {
				"SimpleLottery": {
					"abi": [
						{
							"constant": false,
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"name": "tickets",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "buy",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "drawWinner",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "winner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"name": "duration",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"payable": true,
							"stateMutability": "payable",
							"type": "fallback"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"project_lottery/simplelottery.sol\":33:1442  contract SimpleLottery {... */\n  mstore(0x40, 0x80)\n    /* \"project_lottery/simplelottery.sol\":224:409  constructor(uint duration) public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"project_lottery/simplelottery.sol\":224:409  constructor(uint duration) public {... */\n  pop\n  mload(0x40)\n  0x20\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  dup1\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"project_lottery/simplelottery.sol\":396:402  1 days */\n  0x15180\n    /* \"project_lottery/simplelottery.sol\":385:393  duration */\n  dup2\n    /* \"project_lottery/simplelottery.sol\":385:402  duration * 1 days */\n  mul\n    /* \"project_lottery/simplelottery.sol\":379:382  now */\n  timestamp\n    /* \"project_lottery/simplelottery.sol\":379:402  now + duration * 1 days */\n  add\n    /* \"project_lottery/simplelottery.sol\":355:376  ticketingPeriodCloses */\n  0x0\n    /* \"project_lottery/simplelottery.sol\":355:402  ticketingPeriodCloses = now + duration * 1 days */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"project_lottery/simplelottery.sol\":224:409  constructor(uint duration) public {... */\n  pop\n    /* \"project_lottery/simplelottery.sol\":33:1442  contract SimpleLottery {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"project_lottery/simplelottery.sol\":33:1442  contract SimpleLottery {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x3ccfd60b\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x50b44712\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xa6f2ae3a\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xb2185bb1\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xdfbf53ae\n      eq\n      tag_6\n      jumpi\n    tag_1:\n        /* \"project_lottery/simplelottery.sol\":620:625  buy() */\n      tag_9\n        /* \"project_lottery/simplelottery.sol\":620:623  buy */\n      tag_10\n        /* \"project_lottery/simplelottery.sol\":620:625  buy() */\n      jump\t// in\n    tag_9:\n        /* \"project_lottery/simplelottery.sol\":33:1442  contract SimpleLottery {... */\n      stop\n        /* \"project_lottery/simplelottery.sol\":1315:1440  function withdraw() public {... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_11\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_11:\n        /* \"project_lottery/simplelottery.sol\":1315:1440  function withdraw() public {... */\n      pop\n      tag_12\n      jump(tag_13)\n    tag_12:\n      stop\n        /* \"project_lottery/simplelottery.sol\":166:190  address[] public tickets */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_14\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_14:\n        /* \"project_lottery/simplelottery.sol\":166:190  address[] public tickets */\n      pop\n      tag_15\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_16)\n    tag_15:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"project_lottery/simplelottery.sol\":415:575  function buy() public payable {... */\n    tag_4:\n      tag_17\n      jump(tag_10)\n    tag_17:\n      stop\n        /* \"project_lottery/simplelottery.sol\":638:1309  function drawWinner() public {... */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_18\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_18:\n        /* \"project_lottery/simplelottery.sol\":638:1309  function drawWinner() public {... */\n      pop\n      tag_19\n      jump(tag_20)\n    tag_19:\n      stop\n        /* \"project_lottery/simplelottery.sol\":196:217  address public winner */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_21\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_21:\n        /* \"project_lottery/simplelottery.sol\":196:217  address public winner */\n      pop\n      tag_22\n      jump(tag_23)\n    tag_22:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"project_lottery/simplelottery.sol\":415:575  function buy() public payable {... */\n    tag_10:\n        /* \"project_lottery/simplelottery.sol\":476:487  0.001 ether */\n      0x38d7ea4c68000\n        /* \"project_lottery/simplelottery.sol\":463:472  msg.value */\n      callvalue\n        /* \"project_lottery/simplelottery.sol\":463:487  msg.value >= 0.001 ether */\n      lt\n      iszero\n        /* \"project_lottery/simplelottery.sol\":455:488  require(msg.value >= 0.001 ether) */\n      iszero\n      iszero\n      tag_25\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_25:\n        /* \"project_lottery/simplelottery.sol\":512:533  ticketingPeriodCloses */\n      sload(0x0)\n        /* \"project_lottery/simplelottery.sol\":506:509  now */\n      timestamp\n        /* \"project_lottery/simplelottery.sol\":506:533  now < ticketingPeriodCloses */\n      lt\n        /* \"project_lottery/simplelottery.sol\":498:534  require(now < ticketingPeriodCloses) */\n      iszero\n      iszero\n      tag_26\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_26:\n        /* \"project_lottery/simplelottery.sol\":544:551  tickets */\n      0x1\n        /* \"project_lottery/simplelottery.sol\":557:567  msg.sender */\n      caller\n        /* \"project_lottery/simplelottery.sol\":544:568  tickets.push(msg.sender) */\n      swap1\n      dup1\n        /* \"--CODEGEN--\":39:40   */\n      0x1\n        /* \"--CODEGEN--\":33:36   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      sload\n        /* \"--CODEGEN--\":23:41   */\n      add\n        /* \"--CODEGEN--\":57:67   */\n      dup1\n        /* \"--CODEGEN--\":52:55   */\n      dup3\n        /* \"--CODEGEN--\":45:68   */\n      sstore\n        /* \"--CODEGEN--\":79:89   */\n      dup1\n        /* \"--CODEGEN--\":72:89   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:93   */\n      pop\n        /* \"project_lottery/simplelottery.sol\":544:568  tickets.push(msg.sender) */\n      swap1\n      0x1\n      dup3\n      sub\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      add\n      0x0\n      swap1\n      swap2\n      swap3\n      swap1\n      swap2\n      swap1\n      swap2\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"project_lottery/simplelottery.sol\":415:575  function buy() public payable {... */\n      jump\t// out\n        /* \"project_lottery/simplelottery.sol\":1315:1440  function withdraw() public {... */\n    tag_13:\n        /* \"project_lottery/simplelottery.sol\":1374:1380  winner */\n      0x2\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"project_lottery/simplelottery.sol\":1360:1380  msg.sender == winner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"project_lottery/simplelottery.sol\":1360:1370  msg.sender */\n      caller\n        /* \"project_lottery/simplelottery.sol\":1360:1380  msg.sender == winner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"project_lottery/simplelottery.sol\":1352:1381  require(msg.sender == winner) */\n      iszero\n      iszero\n      tag_29\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_29:\n        /* \"project_lottery/simplelottery.sol\":1391:1401  msg.sender */\n      caller\n        /* \"project_lottery/simplelottery.sol\":1391:1410  msg.sender.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"project_lottery/simplelottery.sol\":1391:1433  msg.sender.transfer(address(this).balance) */\n      0x8fc\n        /* \"project_lottery/simplelottery.sol\":1419:1423  this */\n      address\n        /* \"project_lottery/simplelottery.sol\":1411:1432  address(this).balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"project_lottery/simplelottery.sol\":1391:1433  msg.sender.transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_30\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_30:\n        /* \"project_lottery/simplelottery.sol\":1391:1433  msg.sender.transfer(address(this).balance) */\n      pop\n        /* \"project_lottery/simplelottery.sol\":1315:1440  function withdraw() public {... */\n      jump\t// out\n        /* \"project_lottery/simplelottery.sol\":166:190  address[] public tickets */\n    tag_16:\n      0x1\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_31\n      jumpi\n      invalid\n    tag_31:\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      add\n      0x0\n      swap2\n      pop\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"project_lottery/simplelottery.sol\":638:1309  function drawWinner() public {... */\n    tag_20:\n        /* \"project_lottery/simplelottery.sol\":1152:1164  bytes32 hash */\n      0x0\n        /* \"project_lottery/simplelottery.sol\":1204:1216  bytes32 rand */\n      dup1\n        /* \"project_lottery/simplelottery.sol\":845:854  5 minutes */\n      0x12c\n        /* \"project_lottery/simplelottery.sol\":821:842  ticketingPeriodCloses */\n      sload(0x0)\n        /* \"project_lottery/simplelottery.sol\":821:854  ticketingPeriodCloses + 5 minutes */\n      add\n        /* \"project_lottery/simplelottery.sol\":815:818  now */\n      timestamp\n        /* \"project_lottery/simplelottery.sol\":815:854  now > ticketingPeriodCloses + 5 minutes */\n      gt\n        /* \"project_lottery/simplelottery.sol\":807:855  require(now > ticketingPeriodCloses + 5 minutes) */\n      iszero\n      iszero\n      tag_34\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_34:\n        /* \"project_lottery/simplelottery.sol\":918:919  0 */\n      0x0\n        /* \"project_lottery/simplelottery.sol\":900:920  winner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"project_lottery/simplelottery.sol\":900:906  winner */\n      0x2\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"project_lottery/simplelottery.sol\":900:920  winner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"project_lottery/simplelottery.sol\":892:921  require(winner == address(0)) */\n      iszero\n      iszero\n      tag_35\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_35:\n        /* \"project_lottery/simplelottery.sol\":1192:1193  1 */\n      0x1\n        /* \"project_lottery/simplelottery.sol\":1177:1189  block.number */\n      number\n        /* \"project_lottery/simplelottery.sol\":1177:1193  block.number - 1 */\n      sub\n        /* \"project_lottery/simplelottery.sol\":1167:1194  blockhash(block.number - 1) */\n      blockhash\n        /* \"project_lottery/simplelottery.sol\":1152:1194  bytes32 hash = blockhash(block.number - 1) */\n      swap2\n      pop\n        /* \"project_lottery/simplelottery.sol\":1240:1244  hash */\n      dup2\n        /* \"project_lottery/simplelottery.sol\":1229:1245  abi.encode(hash) */\n      add(0x20, mload(0x40))\n      dup1\n      dup3\n      not(0x0)\n      and\n      not(0x0)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"project_lottery/simplelottery.sol\":1229:1245  abi.encode(hash) */\n      swap1\n      0x40\n      mstore\n        /* \"project_lottery/simplelottery.sol\":1219:1246  keccak256(abi.encode(hash)) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_36:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":51:70   */\n      iszero\n        /* \"--CODEGEN--\":36:189   */\n      iszero\n      tag_37\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_36)\n    tag_37:\n        /* \"--CODEGEN--\":274:275   */\n      0x1\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"project_lottery/simplelottery.sol\":1219:1246  keccak256(abi.encode(hash)) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"project_lottery/simplelottery.sol\":1204:1246  bytes32 rand = keccak256(abi.encode(hash)) */\n      swap1\n      pop\n        /* \"project_lottery/simplelottery.sol\":1266:1273  tickets */\n      0x1\n        /* \"project_lottery/simplelottery.sol\":1287:1294  tickets */\n      dup1\n        /* \"project_lottery/simplelottery.sol\":1287:1301  tickets.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"project_lottery/simplelottery.sol\":1279:1283  rand */\n      dup3\n        /* \"project_lottery/simplelottery.sol\":1274:1284  uint(rand) */\n      0x1\n      swap1\n      div\n        /* \"project_lottery/simplelottery.sol\":1274:1301  uint(rand) % tickets.length */\n      dup2\n      iszero\n      iszero\n      tag_39\n      jumpi\n      invalid\n    tag_39:\n      mod\n        /* \"project_lottery/simplelottery.sol\":1266:1302  tickets[uint(rand) % tickets.length] */\n      dup2\n      sload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_40\n      jumpi\n      invalid\n    tag_40:\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      add\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"project_lottery/simplelottery.sol\":1257:1263  winner */\n      0x2\n      0x0\n        /* \"project_lottery/simplelottery.sol\":1257:1302  winner = tickets[uint(rand) % tickets.length] */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"project_lottery/simplelottery.sol\":638:1309  function drawWinner() public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"project_lottery/simplelottery.sol\":196:217  address public winner */\n    tag_23:\n      0x2\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820356a29b5877266d45dcd28f272ebed2c4abc0fcdbc271a60b509e340269ce0d20029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50604051602080610536833981018060405281019080805190602001909291905050506201518081024201600081905550506104e5806100516000396000f30060806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680633ccfd60b1461007757806350b447121461008e578063a6f2ae3a146100fb578063b2185bb114610105578063dfbf53ae1461011c575b610075610173565b005b34801561008357600080fd5b5061008c610201565b005b34801561009a57600080fd5b506100b9600480360381019080803590602001909291905050506102bd565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610103610173565b005b34801561011157600080fd5b5061011a6102fb565b005b34801561012857600080fd5b50610131610493565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b66038d7ea4c68000341015151561018957600080fd5b6000544210151561019957600080fd5b60013390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561025d57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f193505050501580156102ba573d6000803e3d6000fd5b50565b6001818154811015156102cc57fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061012c600054014211151561031257600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561036f57600080fd5b60014303409150816040516020018082600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b6020831015156103d357805182526020820191506020810190506020830392506103ae565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020905060018080549050826001900481151561041757fe5b0681548110151561042457fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16815600a165627a7a72305820356a29b5877266d45dcd28f272ebed2c4abc0fcdbc271a60b509e340269ce0d20029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 PUSH2 0x536 DUP4 CODECOPY DUP2 ADD DUP1 PUSH1 0x40 MSTORE DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH3 0x15180 DUP2 MUL TIMESTAMP ADD PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP PUSH2 0x4E5 DUP1 PUSH2 0x51 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6D JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0x50B44712 EQ PUSH2 0x8E JUMPI DUP1 PUSH4 0xA6F2AE3A EQ PUSH2 0xFB JUMPI DUP1 PUSH4 0xB2185BB1 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0xDFBF53AE EQ PUSH2 0x11C JUMPI JUMPDEST PUSH2 0x75 PUSH2 0x173 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8C PUSH2 0x201 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x103 PUSH2 0x173 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x111 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11A PUSH2 0x2FB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x128 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x131 PUSH2 0x493 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH7 0x38D7EA4C68000 CALLVALUE LT ISZERO ISZERO ISZERO PUSH2 0x189 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD TIMESTAMP LT ISZERO ISZERO PUSH2 0x199 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SWAP1 PUSH1 0x1 DUP3 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x25D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2BA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x2CC JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x12C PUSH1 0x0 SLOAD ADD TIMESTAMP GT ISZERO ISZERO PUSH2 0x312 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x36F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 NUMBER SUB BLOCKHASH SWAP2 POP DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT ISZERO ISZERO PUSH2 0x3D3 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x3AE JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP PUSH1 0x1 DUP1 DUP1 SLOAD SWAP1 POP DUP3 PUSH1 0x1 SWAP1 DIV DUP2 ISZERO ISZERO PUSH2 0x417 JUMPI INVALID JUMPDEST MOD DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x424 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 CALLDATALOAD PUSH11 0x29B5877266D45DCD28F272 0xeb 0xed 0x2c 0x4a 0xbc 0xf 0xcd 0xbc 0x27 BYTE PUSH1 0xB5 MULMOD 0xe3 BLOCKHASH 0x26 SWAP13 0xe0 0xd2 STOP 0x29 ",
							"sourceMap": "33:1409:0:-;;;224:185;8:9:-1;5:2;;;30:1;27;20:12;5:2;224:185:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;396:6;385:8;:17;379:3;:23;355:21;:47;;;;224:185;33:1409;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "60806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680633ccfd60b1461007757806350b447121461008e578063a6f2ae3a146100fb578063b2185bb114610105578063dfbf53ae1461011c575b610075610173565b005b34801561008357600080fd5b5061008c610201565b005b34801561009a57600080fd5b506100b9600480360381019080803590602001909291905050506102bd565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610103610173565b005b34801561011157600080fd5b5061011a6102fb565b005b34801561012857600080fd5b50610131610493565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b66038d7ea4c68000341015151561018957600080fd5b6000544210151561019957600080fd5b60013390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561025d57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f193505050501580156102ba573d6000803e3d6000fd5b50565b6001818154811015156102cc57fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061012c600054014211151561031257600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561036f57600080fd5b60014303409150816040516020018082600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b6020831015156103d357805182526020820191506020810190506020830392506103ae565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020905060018080549050826001900481151561041757fe5b0681548110151561042457fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16815600a165627a7a72305820356a29b5877266d45dcd28f272ebed2c4abc0fcdbc271a60b509e340269ce0d20029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6D JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0x50B44712 EQ PUSH2 0x8E JUMPI DUP1 PUSH4 0xA6F2AE3A EQ PUSH2 0xFB JUMPI DUP1 PUSH4 0xB2185BB1 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0xDFBF53AE EQ PUSH2 0x11C JUMPI JUMPDEST PUSH2 0x75 PUSH2 0x173 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8C PUSH2 0x201 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x103 PUSH2 0x173 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x111 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11A PUSH2 0x2FB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x128 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x131 PUSH2 0x493 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH7 0x38D7EA4C68000 CALLVALUE LT ISZERO ISZERO ISZERO PUSH2 0x189 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD TIMESTAMP LT ISZERO ISZERO PUSH2 0x199 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SWAP1 PUSH1 0x1 DUP3 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x25D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2BA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x2CC JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x12C PUSH1 0x0 SLOAD ADD TIMESTAMP GT ISZERO ISZERO PUSH2 0x312 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x36F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 NUMBER SUB BLOCKHASH SWAP2 POP DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT ISZERO ISZERO PUSH2 0x3D3 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x3AE JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP PUSH1 0x1 DUP1 DUP1 SLOAD SWAP1 POP DUP3 PUSH1 0x1 SWAP1 DIV DUP2 ISZERO ISZERO PUSH2 0x417 JUMPI INVALID JUMPDEST MOD DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x424 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 CALLDATALOAD PUSH11 0x29B5877266D45DCD28F272 0xeb 0xed 0x2c 0x4a 0xbc 0xf 0xcd 0xbc 0x27 BYTE PUSH1 0xB5 MULMOD 0xe3 BLOCKHASH 0x26 SWAP13 0xe0 0xd2 STOP 0x29 ",
							"sourceMap": "33:1409:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;620:5;:3;:5::i;:::-;33:1409;1315:125;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1315:125:0;;;;;;166:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;166:24:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;415:160;;;;;;638:671;;8:9:-1;5:2;;;30:1;27;20:12;5:2;638:671:0;;;;;;196:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;196:21:0;;;;;;;;;;;;;;;;;;;;;;;;;;;415:160;476:11;463:9;:24;;455:33;;;;;;;;512:21;;506:3;:27;498:36;;;;;;;;544:7;557:10;544:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;544:24:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;415:160::o;1315:125::-;1374:6;;;;;;;;;;;1360:20;;:10;:20;;;1352:29;;;;;;;;1391:10;:19;;:42;1419:4;1411:21;;;1391:42;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1391:42:0;1315:125::o;166:24::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;638:671::-;1152:12;1204;845:9;821:21;;:33;815:3;:39;807:48;;;;;;;;918:1;900:20;;:6;;;;;;;;;;;:20;;;892:29;;;;;;;;1192:1;1177:12;:16;1167:27;1152:42;;1240:4;1229:16;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1229:16:0;;;1219:27;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1219:27:0;;;;;;;;;;;;;;;;1204:42;;1266:7;1287;:14;;;;1279:4;1274:10;;;:27;;;;;;;;1266:36;;;;;;;;;;;;;;;;;;;;;;;;;;;1257:6;;:45;;;;;;;;;;;;;;;;;;638:671;;:::o;196:21::-;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "250600",
								"executionCost": "20407",
								"totalCost": "271007"
							},
							"external": {
								"": "41042",
								"buy()": "40998",
								"drawWinner()": "infinite",
								"tickets(uint256)": "808",
								"winner()": "530",
								"withdraw()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 33,
									"end": 1442,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 33,
									"end": 1442,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 33,
									"end": 1442,
									"name": "MSTORE"
								},
								{
									"begin": 224,
									"end": 409,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 224,
									"end": 409,
									"name": "POP"
								},
								{
									"begin": 224,
									"end": 409,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 224,
									"end": 409,
									"name": "MLOAD"
								},
								{
									"begin": 224,
									"end": 409,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 224,
									"end": 409,
									"name": "DUP1"
								},
								{
									"begin": 224,
									"end": 409,
									"name": "PUSHSIZE"
								},
								{
									"begin": 224,
									"end": 409,
									"name": "DUP4"
								},
								{
									"begin": 224,
									"end": 409,
									"name": "CODECOPY"
								},
								{
									"begin": 224,
									"end": 409,
									"name": "DUP2"
								},
								{
									"begin": 224,
									"end": 409,
									"name": "ADD"
								},
								{
									"begin": 224,
									"end": 409,
									"name": "DUP1"
								},
								{
									"begin": 224,
									"end": 409,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 224,
									"end": 409,
									"name": "MSTORE"
								},
								{
									"begin": 224,
									"end": 409,
									"name": "DUP2"
								},
								{
									"begin": 224,
									"end": 409,
									"name": "ADD"
								},
								{
									"begin": 224,
									"end": 409,
									"name": "SWAP1"
								},
								{
									"begin": 224,
									"end": 409,
									"name": "DUP1"
								},
								{
									"begin": 224,
									"end": 409,
									"name": "DUP1"
								},
								{
									"begin": 224,
									"end": 409,
									"name": "MLOAD"
								},
								{
									"begin": 224,
									"end": 409,
									"name": "SWAP1"
								},
								{
									"begin": 224,
									"end": 409,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 224,
									"end": 409,
									"name": "ADD"
								},
								{
									"begin": 224,
									"end": 409,
									"name": "SWAP1"
								},
								{
									"begin": 224,
									"end": 409,
									"name": "SWAP3"
								},
								{
									"begin": 224,
									"end": 409,
									"name": "SWAP2"
								},
								{
									"begin": 224,
									"end": 409,
									"name": "SWAP1"
								},
								{
									"begin": 224,
									"end": 409,
									"name": "POP"
								},
								{
									"begin": 224,
									"end": 409,
									"name": "POP"
								},
								{
									"begin": 224,
									"end": 409,
									"name": "POP"
								},
								{
									"begin": 396,
									"end": 402,
									"name": "PUSH",
									"value": "15180"
								},
								{
									"begin": 385,
									"end": 393,
									"name": "DUP2"
								},
								{
									"begin": 385,
									"end": 402,
									"name": "MUL"
								},
								{
									"begin": 379,
									"end": 382,
									"name": "TIMESTAMP"
								},
								{
									"begin": 379,
									"end": 402,
									"name": "ADD"
								},
								{
									"begin": 355,
									"end": 376,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 355,
									"end": 402,
									"name": "DUP2"
								},
								{
									"begin": 355,
									"end": 402,
									"name": "SWAP1"
								},
								{
									"begin": 355,
									"end": 402,
									"name": "SSTORE"
								},
								{
									"begin": 355,
									"end": 402,
									"name": "POP"
								},
								{
									"begin": 224,
									"end": 409,
									"name": "POP"
								},
								{
									"begin": 33,
									"end": 1442,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 33,
									"end": 1442,
									"name": "DUP1"
								},
								{
									"begin": 33,
									"end": 1442,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 33,
									"end": 1442,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 33,
									"end": 1442,
									"name": "CODECOPY"
								},
								{
									"begin": 33,
									"end": 1442,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 33,
									"end": 1442,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820356a29b5877266d45dcd28f272ebed2c4abc0fcdbc271a60b509e340269ce0d20029",
									".code": [
										{
											"begin": 33,
											"end": 1442,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 33,
											"end": 1442,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 33,
											"end": 1442,
											"name": "MSTORE"
										},
										{
											"begin": 33,
											"end": 1442,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 33,
											"end": 1442,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 33,
											"end": 1442,
											"name": "LT"
										},
										{
											"begin": 33,
											"end": 1442,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 33,
											"end": 1442,
											"name": "JUMPI"
										},
										{
											"begin": 33,
											"end": 1442,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 33,
											"end": 1442,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 33,
											"end": 1442,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 33,
											"end": 1442,
											"name": "SWAP1"
										},
										{
											"begin": 33,
											"end": 1442,
											"name": "DIV"
										},
										{
											"begin": 33,
											"end": 1442,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 33,
											"end": 1442,
											"name": "AND"
										},
										{
											"begin": 33,
											"end": 1442,
											"name": "DUP1"
										},
										{
											"begin": 33,
											"end": 1442,
											"name": "PUSH",
											"value": "3CCFD60B"
										},
										{
											"begin": 33,
											"end": 1442,
											"name": "EQ"
										},
										{
											"begin": 33,
											"end": 1442,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 33,
											"end": 1442,
											"name": "JUMPI"
										},
										{
											"begin": 33,
											"end": 1442,
											"name": "DUP1"
										},
										{
											"begin": 33,
											"end": 1442,
											"name": "PUSH",
											"value": "50B44712"
										},
										{
											"begin": 33,
											"end": 1442,
											"name": "EQ"
										},
										{
											"begin": 33,
											"end": 1442,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 33,
											"end": 1442,
											"name": "JUMPI"
										},
										{
											"begin": 33,
											"end": 1442,
											"name": "DUP1"
										},
										{
											"begin": 33,
											"end": 1442,
											"name": "PUSH",
											"value": "A6F2AE3A"
										},
										{
											"begin": 33,
											"end": 1442,
											"name": "EQ"
										},
										{
											"begin": 33,
											"end": 1442,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 33,
											"end": 1442,
											"name": "JUMPI"
										},
										{
											"begin": 33,
											"end": 1442,
											"name": "DUP1"
										},
										{
											"begin": 33,
											"end": 1442,
											"name": "PUSH",
											"value": "B2185BB1"
										},
										{
											"begin": 33,
											"end": 1442,
											"name": "EQ"
										},
										{
											"begin": 33,
											"end": 1442,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 33,
											"end": 1442,
											"name": "JUMPI"
										},
										{
											"begin": 33,
											"end": 1442,
											"name": "DUP1"
										},
										{
											"begin": 33,
											"end": 1442,
											"name": "PUSH",
											"value": "DFBF53AE"
										},
										{
											"begin": 33,
											"end": 1442,
											"name": "EQ"
										},
										{
											"begin": 33,
											"end": 1442,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 33,
											"end": 1442,
											"name": "JUMPI"
										},
										{
											"begin": 33,
											"end": 1442,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 33,
											"end": 1442,
											"name": "JUMPDEST"
										},
										{
											"begin": 620,
											"end": 625,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 620,
											"end": 623,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 620,
											"end": 625,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 620,
											"end": 625,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 620,
											"end": 625,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 1442,
											"name": "STOP"
										},
										{
											"begin": 1315,
											"end": 1440,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 1315,
											"end": 1440,
											"name": "JUMPDEST"
										},
										{
											"begin": 1315,
											"end": 1440,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1315,
											"end": 1440,
											"name": "POP"
										},
										{
											"begin": 1315,
											"end": 1440,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 1315,
											"end": 1440,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 1315,
											"end": 1440,
											"name": "JUMP"
										},
										{
											"begin": 1315,
											"end": 1440,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 1315,
											"end": 1440,
											"name": "JUMPDEST"
										},
										{
											"begin": 1315,
											"end": 1440,
											"name": "STOP"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "JUMPDEST"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "POP"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "DUP1"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "SUB"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "DUP2"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "ADD"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "SWAP1"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "DUP1"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "DUP1"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "SWAP1"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "ADD"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "SWAP1"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "SWAP3"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "SWAP2"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "SWAP1"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "POP"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "POP"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "POP"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "JUMP"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "JUMPDEST"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "MLOAD"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "DUP1"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "DUP3"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "AND"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "AND"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "DUP2"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "MSTORE"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "ADD"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "SWAP2"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "POP"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "POP"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "MLOAD"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "DUP1"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "SWAP2"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "SUB"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "SWAP1"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "RETURN"
										},
										{
											"begin": 415,
											"end": 575,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 415,
											"end": 575,
											"name": "JUMPDEST"
										},
										{
											"begin": 415,
											"end": 575,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 415,
											"end": 575,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 415,
											"end": 575,
											"name": "JUMP"
										},
										{
											"begin": 415,
											"end": 575,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 415,
											"end": 575,
											"name": "JUMPDEST"
										},
										{
											"begin": 415,
											"end": 575,
											"name": "STOP"
										},
										{
											"begin": 638,
											"end": 1309,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 638,
											"end": 1309,
											"name": "JUMPDEST"
										},
										{
											"begin": 638,
											"end": 1309,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 638,
											"end": 1309,
											"name": "POP"
										},
										{
											"begin": 638,
											"end": 1309,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 638,
											"end": 1309,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 638,
											"end": 1309,
											"name": "JUMP"
										},
										{
											"begin": 638,
											"end": 1309,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 638,
											"end": 1309,
											"name": "JUMPDEST"
										},
										{
											"begin": 638,
											"end": 1309,
											"name": "STOP"
										},
										{
											"begin": 196,
											"end": 217,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 196,
											"end": 217,
											"name": "JUMPDEST"
										},
										{
											"begin": 196,
											"end": 217,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 196,
											"end": 217,
											"name": "POP"
										},
										{
											"begin": 196,
											"end": 217,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 196,
											"end": 217,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 196,
											"end": 217,
											"name": "JUMP"
										},
										{
											"begin": 196,
											"end": 217,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 196,
											"end": 217,
											"name": "JUMPDEST"
										},
										{
											"begin": 196,
											"end": 217,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 196,
											"end": 217,
											"name": "MLOAD"
										},
										{
											"begin": 196,
											"end": 217,
											"name": "DUP1"
										},
										{
											"begin": 196,
											"end": 217,
											"name": "DUP3"
										},
										{
											"begin": 196,
											"end": 217,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 196,
											"end": 217,
											"name": "AND"
										},
										{
											"begin": 196,
											"end": 217,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 196,
											"end": 217,
											"name": "AND"
										},
										{
											"begin": 196,
											"end": 217,
											"name": "DUP2"
										},
										{
											"begin": 196,
											"end": 217,
											"name": "MSTORE"
										},
										{
											"begin": 196,
											"end": 217,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 196,
											"end": 217,
											"name": "ADD"
										},
										{
											"begin": 196,
											"end": 217,
											"name": "SWAP2"
										},
										{
											"begin": 196,
											"end": 217,
											"name": "POP"
										},
										{
											"begin": 196,
											"end": 217,
											"name": "POP"
										},
										{
											"begin": 196,
											"end": 217,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 196,
											"end": 217,
											"name": "MLOAD"
										},
										{
											"begin": 196,
											"end": 217,
											"name": "DUP1"
										},
										{
											"begin": 196,
											"end": 217,
											"name": "SWAP2"
										},
										{
											"begin": 196,
											"end": 217,
											"name": "SUB"
										},
										{
											"begin": 196,
											"end": 217,
											"name": "SWAP1"
										},
										{
											"begin": 196,
											"end": 217,
											"name": "RETURN"
										},
										{
											"begin": 415,
											"end": 575,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 415,
											"end": 575,
											"name": "JUMPDEST"
										},
										{
											"begin": 476,
											"end": 487,
											"name": "PUSH",
											"value": "38D7EA4C68000"
										},
										{
											"begin": 463,
											"end": 472,
											"name": "CALLVALUE"
										},
										{
											"begin": 463,
											"end": 487,
											"name": "LT"
										},
										{
											"begin": 463,
											"end": 487,
											"name": "ISZERO"
										},
										{
											"begin": 455,
											"end": 488,
											"name": "ISZERO"
										},
										{
											"begin": 455,
											"end": 488,
											"name": "ISZERO"
										},
										{
											"begin": 455,
											"end": 488,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 455,
											"end": 488,
											"name": "JUMPI"
										},
										{
											"begin": 455,
											"end": 488,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 455,
											"end": 488,
											"name": "DUP1"
										},
										{
											"begin": 455,
											"end": 488,
											"name": "REVERT"
										},
										{
											"begin": 455,
											"end": 488,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 455,
											"end": 488,
											"name": "JUMPDEST"
										},
										{
											"begin": 512,
											"end": 533,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 512,
											"end": 533,
											"name": "SLOAD"
										},
										{
											"begin": 506,
											"end": 509,
											"name": "TIMESTAMP"
										},
										{
											"begin": 506,
											"end": 533,
											"name": "LT"
										},
										{
											"begin": 498,
											"end": 534,
											"name": "ISZERO"
										},
										{
											"begin": 498,
											"end": 534,
											"name": "ISZERO"
										},
										{
											"begin": 498,
											"end": 534,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 498,
											"end": 534,
											"name": "JUMPI"
										},
										{
											"begin": 498,
											"end": 534,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 498,
											"end": 534,
											"name": "DUP1"
										},
										{
											"begin": 498,
											"end": 534,
											"name": "REVERT"
										},
										{
											"begin": 498,
											"end": 534,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 498,
											"end": 534,
											"name": "JUMPDEST"
										},
										{
											"begin": 544,
											"end": 551,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 557,
											"end": 567,
											"name": "CALLER"
										},
										{
											"begin": 544,
											"end": 568,
											"name": "SWAP1"
										},
										{
											"begin": 544,
											"end": 568,
											"name": "DUP1"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "SLOAD"
										},
										{
											"begin": 23,
											"end": 41,
											"name": "ADD"
										},
										{
											"begin": 57,
											"end": 67,
											"name": "DUP1"
										},
										{
											"begin": 52,
											"end": 55,
											"name": "DUP3"
										},
										{
											"begin": 45,
											"end": 68,
											"name": "SSTORE"
										},
										{
											"begin": 79,
											"end": 89,
											"name": "DUP1"
										},
										{
											"begin": 72,
											"end": 89,
											"name": "SWAP2"
										},
										{
											"begin": 72,
											"end": 89,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 93,
											"name": "POP"
										},
										{
											"begin": 544,
											"end": 568,
											"name": "SWAP1"
										},
										{
											"begin": 544,
											"end": 568,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 544,
											"end": 568,
											"name": "DUP3"
										},
										{
											"begin": 544,
											"end": 568,
											"name": "SUB"
										},
										{
											"begin": 544,
											"end": 568,
											"name": "SWAP1"
										},
										{
											"begin": 544,
											"end": 568,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 544,
											"end": 568,
											"name": "MSTORE"
										},
										{
											"begin": 544,
											"end": 568,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 544,
											"end": 568,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 544,
											"end": 568,
											"name": "KECCAK256"
										},
										{
											"begin": 544,
											"end": 568,
											"name": "ADD"
										},
										{
											"begin": 544,
											"end": 568,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 544,
											"end": 568,
											"name": "SWAP1"
										},
										{
											"begin": 544,
											"end": 568,
											"name": "SWAP2"
										},
										{
											"begin": 544,
											"end": 568,
											"name": "SWAP3"
										},
										{
											"begin": 544,
											"end": 568,
											"name": "SWAP1"
										},
										{
											"begin": 544,
											"end": 568,
											"name": "SWAP2"
										},
										{
											"begin": 544,
											"end": 568,
											"name": "SWAP1"
										},
										{
											"begin": 544,
											"end": 568,
											"name": "SWAP2"
										},
										{
											"begin": 544,
											"end": 568,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 544,
											"end": 568,
											"name": "EXP"
										},
										{
											"begin": 544,
											"end": 568,
											"name": "DUP2"
										},
										{
											"begin": 544,
											"end": 568,
											"name": "SLOAD"
										},
										{
											"begin": 544,
											"end": 568,
											"name": "DUP2"
										},
										{
											"begin": 544,
											"end": 568,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 544,
											"end": 568,
											"name": "MUL"
										},
										{
											"begin": 544,
											"end": 568,
											"name": "NOT"
										},
										{
											"begin": 544,
											"end": 568,
											"name": "AND"
										},
										{
											"begin": 544,
											"end": 568,
											"name": "SWAP1"
										},
										{
											"begin": 544,
											"end": 568,
											"name": "DUP4"
										},
										{
											"begin": 544,
											"end": 568,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 544,
											"end": 568,
											"name": "AND"
										},
										{
											"begin": 544,
											"end": 568,
											"name": "MUL"
										},
										{
											"begin": 544,
											"end": 568,
											"name": "OR"
										},
										{
											"begin": 544,
											"end": 568,
											"name": "SWAP1"
										},
										{
											"begin": 544,
											"end": 568,
											"name": "SSTORE"
										},
										{
											"begin": 544,
											"end": 568,
											"name": "POP"
										},
										{
											"begin": 544,
											"end": 568,
											"name": "POP"
										},
										{
											"begin": 415,
											"end": 575,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1315,
											"end": 1440,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 1315,
											"end": 1440,
											"name": "JUMPDEST"
										},
										{
											"begin": 1374,
											"end": 1380,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1374,
											"end": 1380,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1374,
											"end": 1380,
											"name": "SWAP1"
										},
										{
											"begin": 1374,
											"end": 1380,
											"name": "SLOAD"
										},
										{
											"begin": 1374,
											"end": 1380,
											"name": "SWAP1"
										},
										{
											"begin": 1374,
											"end": 1380,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1374,
											"end": 1380,
											"name": "EXP"
										},
										{
											"begin": 1374,
											"end": 1380,
											"name": "SWAP1"
										},
										{
											"begin": 1374,
											"end": 1380,
											"name": "DIV"
										},
										{
											"begin": 1374,
											"end": 1380,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1374,
											"end": 1380,
											"name": "AND"
										},
										{
											"begin": 1360,
											"end": 1380,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1360,
											"end": 1380,
											"name": "AND"
										},
										{
											"begin": 1360,
											"end": 1370,
											"name": "CALLER"
										},
										{
											"begin": 1360,
											"end": 1380,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1360,
											"end": 1380,
											"name": "AND"
										},
										{
											"begin": 1360,
											"end": 1380,
											"name": "EQ"
										},
										{
											"begin": 1352,
											"end": 1381,
											"name": "ISZERO"
										},
										{
											"begin": 1352,
											"end": 1381,
											"name": "ISZERO"
										},
										{
											"begin": 1352,
											"end": 1381,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 1352,
											"end": 1381,
											"name": "JUMPI"
										},
										{
											"begin": 1352,
											"end": 1381,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1381,
											"name": "DUP1"
										},
										{
											"begin": 1352,
											"end": 1381,
											"name": "REVERT"
										},
										{
											"begin": 1352,
											"end": 1381,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 1352,
											"end": 1381,
											"name": "JUMPDEST"
										},
										{
											"begin": 1391,
											"end": 1401,
											"name": "CALLER"
										},
										{
											"begin": 1391,
											"end": 1410,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1391,
											"end": 1410,
											"name": "AND"
										},
										{
											"begin": 1391,
											"end": 1433,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 1419,
											"end": 1423,
											"name": "ADDRESS"
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "AND"
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "BALANCE"
										},
										{
											"begin": 1391,
											"end": 1433,
											"name": "SWAP1"
										},
										{
											"begin": 1391,
											"end": 1433,
											"name": "DUP2"
										},
										{
											"begin": 1391,
											"end": 1433,
											"name": "ISZERO"
										},
										{
											"begin": 1391,
											"end": 1433,
											"name": "MUL"
										},
										{
											"begin": 1391,
											"end": 1433,
											"name": "SWAP1"
										},
										{
											"begin": 1391,
											"end": 1433,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1391,
											"end": 1433,
											"name": "MLOAD"
										},
										{
											"begin": 1391,
											"end": 1433,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 1433,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1391,
											"end": 1433,
											"name": "MLOAD"
										},
										{
											"begin": 1391,
											"end": 1433,
											"name": "DUP1"
										},
										{
											"begin": 1391,
											"end": 1433,
											"name": "DUP4"
										},
										{
											"begin": 1391,
											"end": 1433,
											"name": "SUB"
										},
										{
											"begin": 1391,
											"end": 1433,
											"name": "DUP2"
										},
										{
											"begin": 1391,
											"end": 1433,
											"name": "DUP6"
										},
										{
											"begin": 1391,
											"end": 1433,
											"name": "DUP9"
										},
										{
											"begin": 1391,
											"end": 1433,
											"name": "DUP9"
										},
										{
											"begin": 1391,
											"end": 1433,
											"name": "CALL"
										},
										{
											"begin": 1391,
											"end": 1433,
											"name": "SWAP4"
										},
										{
											"begin": 1391,
											"end": 1433,
											"name": "POP"
										},
										{
											"begin": 1391,
											"end": 1433,
											"name": "POP"
										},
										{
											"begin": 1391,
											"end": 1433,
											"name": "POP"
										},
										{
											"begin": 1391,
											"end": 1433,
											"name": "POP"
										},
										{
											"begin": 1391,
											"end": 1433,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1391,
											"end": 1433,
											"name": "POP"
										},
										{
											"begin": 1315,
											"end": 1440,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "JUMPDEST"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "DUP2"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "DUP2"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "SLOAD"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "DUP2"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "LT"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "ISZERO"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "ISZERO"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "JUMPI"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "INVALID"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "JUMPDEST"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "SWAP1"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "MSTORE"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "KECCAK256"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "ADD"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "SWAP2"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "POP"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "SLOAD"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "SWAP1"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "EXP"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "SWAP1"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "DIV"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "AND"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "DUP2"
										},
										{
											"begin": 166,
											"end": 190,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 638,
											"end": 1309,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 638,
											"end": 1309,
											"name": "JUMPDEST"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1204,
											"end": 1216,
											"name": "DUP1"
										},
										{
											"begin": 845,
											"end": 854,
											"name": "PUSH",
											"value": "12C"
										},
										{
											"begin": 821,
											"end": 842,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 821,
											"end": 842,
											"name": "SLOAD"
										},
										{
											"begin": 821,
											"end": 854,
											"name": "ADD"
										},
										{
											"begin": 815,
											"end": 818,
											"name": "TIMESTAMP"
										},
										{
											"begin": 815,
											"end": 854,
											"name": "GT"
										},
										{
											"begin": 807,
											"end": 855,
											"name": "ISZERO"
										},
										{
											"begin": 807,
											"end": 855,
											"name": "ISZERO"
										},
										{
											"begin": 807,
											"end": 855,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 807,
											"end": 855,
											"name": "JUMPI"
										},
										{
											"begin": 807,
											"end": 855,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 807,
											"end": 855,
											"name": "DUP1"
										},
										{
											"begin": 807,
											"end": 855,
											"name": "REVERT"
										},
										{
											"begin": 807,
											"end": 855,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 807,
											"end": 855,
											"name": "JUMPDEST"
										},
										{
											"begin": 918,
											"end": 919,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 900,
											"end": 920,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 900,
											"end": 920,
											"name": "AND"
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 900,
											"end": 906,
											"name": "SWAP1"
										},
										{
											"begin": 900,
											"end": 906,
											"name": "SLOAD"
										},
										{
											"begin": 900,
											"end": 906,
											"name": "SWAP1"
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 900,
											"end": 906,
											"name": "EXP"
										},
										{
											"begin": 900,
											"end": 906,
											"name": "SWAP1"
										},
										{
											"begin": 900,
											"end": 906,
											"name": "DIV"
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 900,
											"end": 906,
											"name": "AND"
										},
										{
											"begin": 900,
											"end": 920,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 900,
											"end": 920,
											"name": "AND"
										},
										{
											"begin": 900,
											"end": 920,
											"name": "EQ"
										},
										{
											"begin": 892,
											"end": 921,
											"name": "ISZERO"
										},
										{
											"begin": 892,
											"end": 921,
											"name": "ISZERO"
										},
										{
											"begin": 892,
											"end": 921,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 892,
											"end": 921,
											"name": "JUMPI"
										},
										{
											"begin": 892,
											"end": 921,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 892,
											"end": 921,
											"name": "DUP1"
										},
										{
											"begin": 892,
											"end": 921,
											"name": "REVERT"
										},
										{
											"begin": 892,
											"end": 921,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 892,
											"end": 921,
											"name": "JUMPDEST"
										},
										{
											"begin": 1192,
											"end": 1193,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1177,
											"end": 1189,
											"name": "NUMBER"
										},
										{
											"begin": 1177,
											"end": 1193,
											"name": "SUB"
										},
										{
											"begin": 1167,
											"end": 1194,
											"name": "BLOCKHASH"
										},
										{
											"begin": 1152,
											"end": 1194,
											"name": "SWAP2"
										},
										{
											"begin": 1152,
											"end": 1194,
											"name": "POP"
										},
										{
											"begin": 1240,
											"end": 1244,
											"name": "DUP2"
										},
										{
											"begin": 1229,
											"end": 1245,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1229,
											"end": 1245,
											"name": "MLOAD"
										},
										{
											"begin": 1229,
											"end": 1245,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1229,
											"end": 1245,
											"name": "ADD"
										},
										{
											"begin": 1229,
											"end": 1245,
											"name": "DUP1"
										},
										{
											"begin": 1229,
											"end": 1245,
											"name": "DUP3"
										},
										{
											"begin": 1229,
											"end": 1245,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1229,
											"end": 1245,
											"name": "NOT"
										},
										{
											"begin": 1229,
											"end": 1245,
											"name": "AND"
										},
										{
											"begin": 1229,
											"end": 1245,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1229,
											"end": 1245,
											"name": "NOT"
										},
										{
											"begin": 1229,
											"end": 1245,
											"name": "AND"
										},
										{
											"begin": 1229,
											"end": 1245,
											"name": "DUP2"
										},
										{
											"begin": 1229,
											"end": 1245,
											"name": "MSTORE"
										},
										{
											"begin": 1229,
											"end": 1245,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1229,
											"end": 1245,
											"name": "ADD"
										},
										{
											"begin": 1229,
											"end": 1245,
											"name": "SWAP2"
										},
										{
											"begin": 1229,
											"end": 1245,
											"name": "POP"
										},
										{
											"begin": 1229,
											"end": 1245,
											"name": "POP"
										},
										{
											"begin": 1229,
											"end": 1245,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1229,
											"end": 1245,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 1229,
											"end": 1245,
											"name": "SWAP1"
										},
										{
											"begin": 1229,
											"end": 1245,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1229,
											"end": 1245,
											"name": "MSTORE"
										},
										{
											"begin": 1219,
											"end": 1246,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1219,
											"end": 1246,
											"name": "MLOAD"
										},
										{
											"begin": 1219,
											"end": 1246,
											"name": "DUP1"
										},
										{
											"begin": 1219,
											"end": 1246,
											"name": "DUP3"
										},
										{
											"begin": 1219,
											"end": 1246,
											"name": "DUP1"
										},
										{
											"begin": 1219,
											"end": 1246,
											"name": "MLOAD"
										},
										{
											"begin": 1219,
											"end": 1246,
											"name": "SWAP1"
										},
										{
											"begin": 1219,
											"end": 1246,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1219,
											"end": 1246,
											"name": "ADD"
										},
										{
											"begin": 1219,
											"end": 1246,
											"name": "SWAP1"
										},
										{
											"begin": 1219,
											"end": 1246,
											"name": "DUP1"
										},
										{
											"begin": 1219,
											"end": 1246,
											"name": "DUP4"
										},
										{
											"begin": 1219,
											"end": 1246,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 51,
											"end": 70,
											"name": "ISZERO"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "ISZERO"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP"
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP"
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 1219,
											"end": 1246,
											"name": "POP"
										},
										{
											"begin": 1219,
											"end": 1246,
											"name": "POP"
										},
										{
											"begin": 1219,
											"end": 1246,
											"name": "POP"
										},
										{
											"begin": 1219,
											"end": 1246,
											"name": "SWAP1"
										},
										{
											"begin": 1219,
											"end": 1246,
											"name": "POP"
										},
										{
											"begin": 1219,
											"end": 1246,
											"name": "ADD"
										},
										{
											"begin": 1219,
											"end": 1246,
											"name": "SWAP2"
										},
										{
											"begin": 1219,
											"end": 1246,
											"name": "POP"
										},
										{
											"begin": 1219,
											"end": 1246,
											"name": "POP"
										},
										{
											"begin": 1219,
											"end": 1246,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1219,
											"end": 1246,
											"name": "MLOAD"
										},
										{
											"begin": 1219,
											"end": 1246,
											"name": "DUP1"
										},
										{
											"begin": 1219,
											"end": 1246,
											"name": "SWAP2"
										},
										{
											"begin": 1219,
											"end": 1246,
											"name": "SUB"
										},
										{
											"begin": 1219,
											"end": 1246,
											"name": "SWAP1"
										},
										{
											"begin": 1219,
											"end": 1246,
											"name": "KECCAK256"
										},
										{
											"begin": 1204,
											"end": 1246,
											"name": "SWAP1"
										},
										{
											"begin": 1204,
											"end": 1246,
											"name": "POP"
										},
										{
											"begin": 1266,
											"end": 1273,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1287,
											"end": 1294,
											"name": "DUP1"
										},
										{
											"begin": 1287,
											"end": 1301,
											"name": "DUP1"
										},
										{
											"begin": 1287,
											"end": 1301,
											"name": "SLOAD"
										},
										{
											"begin": 1287,
											"end": 1301,
											"name": "SWAP1"
										},
										{
											"begin": 1287,
											"end": 1301,
											"name": "POP"
										},
										{
											"begin": 1279,
											"end": 1283,
											"name": "DUP3"
										},
										{
											"begin": 1274,
											"end": 1284,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1274,
											"end": 1284,
											"name": "SWAP1"
										},
										{
											"begin": 1274,
											"end": 1284,
											"name": "DIV"
										},
										{
											"begin": 1274,
											"end": 1301,
											"name": "DUP2"
										},
										{
											"begin": 1274,
											"end": 1301,
											"name": "ISZERO"
										},
										{
											"begin": 1274,
											"end": 1301,
											"name": "ISZERO"
										},
										{
											"begin": 1274,
											"end": 1301,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 1274,
											"end": 1301,
											"name": "JUMPI"
										},
										{
											"begin": 1274,
											"end": 1301,
											"name": "INVALID"
										},
										{
											"begin": 1274,
											"end": 1301,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 1274,
											"end": 1301,
											"name": "JUMPDEST"
										},
										{
											"begin": 1274,
											"end": 1301,
											"name": "MOD"
										},
										{
											"begin": 1266,
											"end": 1302,
											"name": "DUP2"
										},
										{
											"begin": 1266,
											"end": 1302,
											"name": "SLOAD"
										},
										{
											"begin": 1266,
											"end": 1302,
											"name": "DUP2"
										},
										{
											"begin": 1266,
											"end": 1302,
											"name": "LT"
										},
										{
											"begin": 1266,
											"end": 1302,
											"name": "ISZERO"
										},
										{
											"begin": 1266,
											"end": 1302,
											"name": "ISZERO"
										},
										{
											"begin": 1266,
											"end": 1302,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 1266,
											"end": 1302,
											"name": "JUMPI"
										},
										{
											"begin": 1266,
											"end": 1302,
											"name": "INVALID"
										},
										{
											"begin": 1266,
											"end": 1302,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 1266,
											"end": 1302,
											"name": "JUMPDEST"
										},
										{
											"begin": 1266,
											"end": 1302,
											"name": "SWAP1"
										},
										{
											"begin": 1266,
											"end": 1302,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1266,
											"end": 1302,
											"name": "MSTORE"
										},
										{
											"begin": 1266,
											"end": 1302,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1266,
											"end": 1302,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1266,
											"end": 1302,
											"name": "KECCAK256"
										},
										{
											"begin": 1266,
											"end": 1302,
											"name": "ADD"
										},
										{
											"begin": 1266,
											"end": 1302,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1266,
											"end": 1302,
											"name": "SWAP1"
										},
										{
											"begin": 1266,
											"end": 1302,
											"name": "SLOAD"
										},
										{
											"begin": 1266,
											"end": 1302,
											"name": "SWAP1"
										},
										{
											"begin": 1266,
											"end": 1302,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1266,
											"end": 1302,
											"name": "EXP"
										},
										{
											"begin": 1266,
											"end": 1302,
											"name": "SWAP1"
										},
										{
											"begin": 1266,
											"end": 1302,
											"name": "DIV"
										},
										{
											"begin": 1266,
											"end": 1302,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1266,
											"end": 1302,
											"name": "AND"
										},
										{
											"begin": 1257,
											"end": 1263,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1257,
											"end": 1263,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1257,
											"end": 1302,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1257,
											"end": 1302,
											"name": "EXP"
										},
										{
											"begin": 1257,
											"end": 1302,
											"name": "DUP2"
										},
										{
											"begin": 1257,
											"end": 1302,
											"name": "SLOAD"
										},
										{
											"begin": 1257,
											"end": 1302,
											"name": "DUP2"
										},
										{
											"begin": 1257,
											"end": 1302,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1257,
											"end": 1302,
											"name": "MUL"
										},
										{
											"begin": 1257,
											"end": 1302,
											"name": "NOT"
										},
										{
											"begin": 1257,
											"end": 1302,
											"name": "AND"
										},
										{
											"begin": 1257,
											"end": 1302,
											"name": "SWAP1"
										},
										{
											"begin": 1257,
											"end": 1302,
											"name": "DUP4"
										},
										{
											"begin": 1257,
											"end": 1302,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1257,
											"end": 1302,
											"name": "AND"
										},
										{
											"begin": 1257,
											"end": 1302,
											"name": "MUL"
										},
										{
											"begin": 1257,
											"end": 1302,
											"name": "OR"
										},
										{
											"begin": 1257,
											"end": 1302,
											"name": "SWAP1"
										},
										{
											"begin": 1257,
											"end": 1302,
											"name": "SSTORE"
										},
										{
											"begin": 1257,
											"end": 1302,
											"name": "POP"
										},
										{
											"begin": 638,
											"end": 1309,
											"name": "POP"
										},
										{
											"begin": 638,
											"end": 1309,
											"name": "POP"
										},
										{
											"begin": 638,
											"end": 1309,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 196,
											"end": 217,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 196,
											"end": 217,
											"name": "JUMPDEST"
										},
										{
											"begin": 196,
											"end": 217,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 196,
											"end": 217,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 196,
											"end": 217,
											"name": "SWAP1"
										},
										{
											"begin": 196,
											"end": 217,
											"name": "SLOAD"
										},
										{
											"begin": 196,
											"end": 217,
											"name": "SWAP1"
										},
										{
											"begin": 196,
											"end": 217,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 196,
											"end": 217,
											"name": "EXP"
										},
										{
											"begin": 196,
											"end": 217,
											"name": "SWAP1"
										},
										{
											"begin": 196,
											"end": 217,
											"name": "DIV"
										},
										{
											"begin": 196,
											"end": 217,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 196,
											"end": 217,
											"name": "AND"
										},
										{
											"begin": 196,
											"end": 217,
											"name": "DUP2"
										},
										{
											"begin": 196,
											"end": 217,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"buy()": "a6f2ae3a",
							"drawWinner()": "b2185bb1",
							"tickets(uint256)": "50b44712",
							"winner()": "dfbf53ae",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tickets\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buy\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"drawWinner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"winner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"duration\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project_lottery/simplelottery.sol\":\"SimpleLottery\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project_lottery/simplelottery.sol\":{\"keccak256\":\"0x28096db5a66c77bfd4ffe9751bf1baed998ab6c9020408ca434151160a5957e4\",\"urls\":[\"bzzr://1d04d5367df91292ae612917410829cdfd0a371e9477ac327fd30f6fa6baee82\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"project_lottery/simplelottery.sol": {
				"ast": {
					"absolutePath": "project_lottery/simplelottery.sol",
					"exportedSymbols": {
						"SimpleLottery": [
							125
						]
					},
					"id": 126,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".0",
								"<",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:31:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 125,
							"linearizedBaseContracts": [
								125
							],
							"name": "SimpleLottery",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"name": "ticketingPeriodCloses",
									"nodeType": "VariableDeclaration",
									"scope": 125,
									"src": "134:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "134:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 6,
									"name": "tickets",
									"nodeType": "VariableDeclaration",
									"scope": 125,
									"src": "166:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 4,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "166:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 5,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "166:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 8,
									"name": "winner",
									"nodeType": "VariableDeclaration",
									"scope": 125,
									"src": "196:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "196:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 21,
										"nodeType": "Block",
										"src": "258:151:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 19,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 13,
														"name": "ticketingPeriodCloses",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "355:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 18,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 14,
															"name": "now",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "379:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 17,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 15,
																"name": "duration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "385:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "31",
																"id": 16,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "396:6:0",
																"subdenomination": "days",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_86400_by_1",
																	"typeString": "int_const 86400"
																},
																"value": "1"
															},
															"src": "385:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "379:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "355:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 20,
												"nodeType": "ExpressionStatement",
												"src": "355:47:0"
											}
										]
									},
									"documentation": null,
									"id": 22,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"name": "duration",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "236:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 9,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "236:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "235:15:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "258:0:0"
									},
									"scope": 125,
									"src": "224:185:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "445:130:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 29,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 26,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 140,
																	"src": "463:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 27,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "463:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "302e303031",
																"id": 28,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "476:11:0",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000_by_1",
																	"typeString": "int_const 1000000000000000"
																},
																"value": "0.001"
															},
															"src": "463:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 25,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															143,
															144
														],
														"referencedDeclaration": 143,
														"src": "455:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "455:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 31,
												"nodeType": "ExpressionStatement",
												"src": "455:33:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 33,
																"name": "now",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 142,
																"src": "506:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"id": 34,
																"name": "ticketingPeriodCloses",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "512:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "506:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 32,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															143,
															144
														],
														"referencedDeclaration": 143,
														"src": "498:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "498:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "498:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 41,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 140,
																"src": "557:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "557:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 38,
															"name": "tickets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 6,
															"src": "544:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 40,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "544:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) returns (uint256)"
														}
													},
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "544:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 44,
												"nodeType": "ExpressionStatement",
												"src": "544:24:0"
											}
										]
									},
									"documentation": null,
									"id": 46,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "buy",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "427:2:0"
									},
									"payable": true,
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "445:0:0"
									},
									"scope": 125,
									"src": "415:160:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "610:22:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 49,
														"name": "buy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "620:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "620:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 51,
												"nodeType": "ExpressionStatement",
												"src": "620:5:0"
											}
										]
									},
									"documentation": null,
									"id": 53,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "590:2:0"
									},
									"payable": true,
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "610:0:0"
									},
									"scope": 125,
									"src": "581:51:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 101,
										"nodeType": "Block",
										"src": "667:642:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 61,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 57,
																"name": "now",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 142,
																"src": "815:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 58,
																	"name": "ticketingPeriodCloses",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "821:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "35",
																	"id": 59,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "845:9:0",
																	"subdenomination": "minutes",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_300_by_1",
																		"typeString": "int_const 300"
																	},
																	"value": "5"
																},
																"src": "821:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "815:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 56,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															143,
															144
														],
														"referencedDeclaration": 143,
														"src": "807:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "807:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 63,
												"nodeType": "ExpressionStatement",
												"src": "807:48:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 69,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 65,
																"name": "winner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 8,
																"src": "900:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 67,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "918:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 66,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "910:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 68,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "910:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "900:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 64,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															143,
															144
														],
														"referencedDeclaration": 143,
														"src": "892:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "892:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 71,
												"nodeType": "ExpressionStatement",
												"src": "892:29:0"
											},
											{
												"assignments": [
													73
												],
												"declarations": [
													{
														"constant": false,
														"id": 73,
														"name": "hash",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "1152:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 72,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1152:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 80,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 75,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 130,
																	"src": "1177:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 76,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "number",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1177:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "31",
																"id": 77,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1192:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1177:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 74,
														"name": "blockhash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "1167:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (uint256) view returns (bytes32)"
														}
													},
													"id": 79,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1167:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1152:42:0"
											},
											{
												"assignments": [
													82
												],
												"declarations": [
													{
														"constant": false,
														"id": 82,
														"name": "rand",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "1204:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 81,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1204:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 89,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 86,
																	"name": "hash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 73,
																	"src": "1240:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 84,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 127,
																	"src": "1229:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 85,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1229:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 87,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1229:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 83,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 134,
														"src": "1219:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
															"typeString": "function () pure returns (bytes32)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1219:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1204:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 90,
														"name": "winner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "1257:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 91,
															"name": "tickets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 6,
															"src": "1266:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 98,
														"indexExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 97,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 93,
																		"name": "rand",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 82,
																		"src": "1279:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 92,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1274:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": "uint"
																},
																"id": 94,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1274:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 95,
																	"name": "tickets",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "1287:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 96,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1287:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1274:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1266:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1257:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 100,
												"nodeType": "ExpressionStatement",
												"src": "1257:45:0"
											}
										]
									},
									"documentation": null,
									"id": 102,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "drawWinner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "657:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "667:0:0"
									},
									"scope": 125,
									"src": "638:671:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "1342:98:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 106,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 140,
																	"src": "1360:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 107,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1360:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 108,
																"name": "winner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 8,
																"src": "1374:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1360:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 105,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															143,
															144
														],
														"referencedDeclaration": 143,
														"src": "1352:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1352:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 111,
												"nodeType": "ExpressionStatement",
												"src": "1352:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 118,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 153,
																		"src": "1419:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SimpleLottery_$125",
																			"typeString": "contract SimpleLottery"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SimpleLottery_$125",
																			"typeString": "contract SimpleLottery"
																		}
																	],
																	"id": 117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1411:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 119,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1411:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1411:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 112,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 140,
																"src": "1391:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1391:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 116,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1391:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1391:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 122,
												"nodeType": "ExpressionStatement",
												"src": "1391:42:0"
											}
										]
									},
									"documentation": null,
									"id": 124,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1332:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1342:0:0"
									},
									"scope": 125,
									"src": "1315:125:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 126,
							"src": "33:1409:0"
						}
					],
					"src": "0:1442:0"
				},
				"id": 0
			}
		}
	}
}